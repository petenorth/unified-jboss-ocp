//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.11.02 at 02:34:25 PM GMT 
//


package com.redhat.ukiservices.etl.model;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for MsgCategoryType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="MsgCategoryType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="Train"/&gt;
 *     &lt;enumeration value="Station"/&gt;
 *     &lt;enumeration value="Connections"/&gt;
 *     &lt;enumeration value="System"/&gt;
 *     &lt;enumeration value="Misc"/&gt;
 *     &lt;enumeration value="PriorTrains"/&gt;
 *     &lt;enumeration value="PriorOther"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "MsgCategoryType", namespace = "http://www.thalesgroup.com/rtti/PushPort/StationMessages/v1")
@XmlEnum
public enum MsgCategoryType {

    @XmlEnumValue("Train")
    TRAIN("Train"),
    @XmlEnumValue("Station")
    STATION("Station"),
    @XmlEnumValue("Connections")
    CONNECTIONS("Connections"),
    @XmlEnumValue("System")
    SYSTEM("System"),
    @XmlEnumValue("Misc")
    MISC("Misc"),
    @XmlEnumValue("PriorTrains")
    PRIOR_TRAINS("PriorTrains"),
    @XmlEnumValue("PriorOther")
    PRIOR_OTHER("PriorOther");
    private final String value;

    MsgCategoryType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static MsgCategoryType fromValue(String v) {
        for (MsgCategoryType c: MsgCategoryType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
